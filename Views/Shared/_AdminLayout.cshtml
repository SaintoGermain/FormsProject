<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - iTraForms</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/styles.css" />
    <link rel="stylesheet" href="~/css/tagify.css">
</head> 
<body>
    <div class="d-flex" id="wrapper">
        <!-- Sidebar -->
        <div class="bg-dark border-right" id="sidebar-wrapper">
            <div class="sidebar-heading text-white">iTra Forms </div>
            <div class="list-group list-group-flush">
                <a class="list-group-item list-group-item-action bg-dark text-white" asp-area="" asp-controller="Home" asp-action="Page">Home</a>
                <a class="list-group-item list-group-item-action bg-dark text-white" asp-area="" asp-controller="Home" asp-action="Profile">My Profile</a>
                <a class="list-group-item list-group-item-action bg-dark text-white" asp-area="" asp-controller="Users" asp-action="UsersList">Manage Users</a>
                <a class="list-group-item list-group-item-action bg-dark text-white" asp-area="" asp-controller="Forms" asp-action="Forms">Create Template</a>
                <a class="list-group-item list-group-item-action bg-dark text-white" asp-area="" asp-controller="Home" asp-action="Logout">Logout</a>

            </div>
        </div>
        <!-- Page Content -->
        <div id="page-content-wrapper">
            <nav class="navbar navbar-expand-lg navbar-light bg-light border-bottom">
                <button class="btn btn-primary ms-2 m-2" id="menu-toggle">☰</button>
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#ticketModal">
                    Create Support Ticket
                </button>
                <div class="modal fade" id="ticketModal" tabindex="-1" aria-labelledby="ticketModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="ticketModalLabel">Create Support Ticket</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <form id="ticketForm">
                                    <div class="mb-3">
                                        <label for="summary" class="form-label">Summary:</label>
                                        <input type="text" class="form-control" id="summary" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="priority" class="form-label">Priority:</label>
                                        <select class="form-select" id="priority" required>
                                            <option value="High">High</option>
                                            <option value="Average">Average</option>
                                            <option value="Low">Low</option>
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label for="link" class="form-label">Page Link:</label>
                                        <input type="url" class="form-control" id="link" value="CURRENT_PAGE_LINK" readonly>
                                    </div>
                                    <div class="mb-3">
                                        <label for="link" class="form-label">Reported by:</label>
                                        <input type="text" class="form-control" id="currentUser" value="CURRENT_USER" readonly>
                                    </div>
                                    <div class="mb-3">
                                        <label for="link" class="form-label">Status:</label>
                                        <input type="text" class="form-control" id="currentStatus" value="CURRENT_STATUS" readonly>
                                    </div>
                                    <div class="mb-3">
                                        <label for="link" class="form-label">Template:</label>
                                        <input type="text" class="form-control" id="currentTemplate" value="CURRENT_TEMPLATE" readonly>
                                    </div>
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="button" class="btn btn-primary" id="submitTicket">Submit</button>
                            </div>
                        </div>
                    </div>
                </div>
                <span class="navbar-brand ms-2"></span>
                <form class="d-flex ms-auto" method="get" action="/Search">
                    <input class="form-control me-2" type="search" placeholder="Search Template..." aria-label="Search" name="query">
                    <button class="btn btn-outline-success" type="submit">Search</button>
                </form>
            </nav>
            
            <div class="container-fluid mt-3">
                @RenderBody()
            </div>
        </div>
    </div>
    <!-- Scripts -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/tagify.js"></script>
    <script>
        $("#menu-toggle").click(function (e) {
            e.preventDefault();
            $("#wrapper").toggleClass("toggled");
        });
    </script>
    <script>
          document.getElementById("submitTicket").addEventListener("click", () => {
          const summary = document.getElementById("summary").value;
          const priority = document.getElementById("priority").value;
          const link = document.getElementById("link").value;

          fetch("/Ticket/CreateTicket", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ summary, priority, link }),
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.link) {
                alert("Ticket created successfully! View it here: " + data.link);
                window.location.reload();
              } else {
                alert("Error creating ticket: " + data);
              }
            })
            .catch((error) => console.error("Error:", error));
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const ticketModal = document.getElementById('ticketModal');
            const linkInput = document.getElementById('link');

            ticketModal.addEventListener('show.bs.modal', () => {
                linkInput.value = window.location.href;
            });

            document.getElementById('submitTicket').addEventListener('click', async () => {
                try {
                    const summary = document.getElementById('summary').value;
                    const priority = document.getElementById('priority').value;
                    const link = linkInput.value;

                    const ticketData = { summary, priority, link };

                    const response = await fetch('/Ticket/CreateTicket', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(ticketData),
                    });

                    if (!response.ok) {
                        throw new Error(`Error al crear el ticket: ${response.statusText}`);
                    }

                    const result = await response.json();
                    alert(`Ticket creado exitosamente: ${result.ticketUrl}`);
                } catch (error) {
                    console.error(error);
                    alert(`Ocurrió un error: ${error.message}`);
                }
            });
        });
    </script>
    <script>
                async function getFormTitle(formId) {
            try {
                const response = await fetch(`/Ticket/GetFormTitle/${formId}`);

                if (!response.ok) throw new Error(`Error al obtener el título del formulario: ${response.statusText}`);

                const data = await response.json();
                console.log("Título del formulario:", data.Title);

                return data.Title;
            } catch (error) {
                console.error("Error:", error);
                return null;
            }
        }

        // Lógica completa
        (async () => {
            const path = window.location.pathname;
            const segments = path.split('/');
            const formId = segments[segments.length - 1];

            if (formId) {
                const formTitle = await getFormTitle(formId);
                console.log("Título recuperado:", formTitle);

                // Usa el título en el ticket
                document.getElementById("templateTitle").value = formTitle || "No disponible";
            }
        })();

    </script>
    @await RenderSectionAsync("Script", required: false)
</body>
</html>
