@using FormsProyect.ViewModels
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Form Making";
}
@model FormViewModel
<link rel="stylesheet" href="~/css/tagify.css">
<script src="~/js/tagify.js"></script>
<h2>Form Making</h2>

<form asp-action="Forms" method="post">
    <div class="form-group">
        <label for="Title">Form Title</label>
        <input asp-for="Title" class="form-control" />
    </div>

    <div class="form-group">
        <label for="Description">Description</label>
        <textarea asp-for="Description" class="form-control"></textarea>
    </div>

    <hr />

    <div class="form-group mb-4">
        <label for="topicForm">Topic:</label>
        <select asp-for="SelectedTopicId" asp-items="@(new SelectList(Model.Topics, "TopicID", "_TopicName"))" class="form-control" required>
            <option value="">-- Select a Topic --</option>
        </select>
    </div>

    <hr />

    <div class="mb-4">
        <label for="numberOfSingleLine">Number of Single-Line questions:</label>
        <select id="numberOfSingleLine" name="numberOfSingleLineQuestions" required>
            <option value="0">0</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
        </select>
    </div>

    <div class="mb-4">
        <label for="numberOfMultipleLines">Number of Multiple-Lines questions:</label>
        <select id="numberOfMultipleLines" name="numberOfMultipleLinesQuestions" required>
            <option value="0">0</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
        </select>
    </div>

    <div class ="mb-4">
        <label for="numberOfPositiveIntegers">Number of Positive Integer questions:</label>
        <select id="numberOfPositiveIntegers" name="numberOfPositiveIntegersQuestions" required>
            <option value="0">0</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
        </select>
    </div>

    <div class="mb-4">
        <label for="numberOfCheckbox">Number of Checkbox questions:</label>
        <select id="numberOfCheckbox" name="numberOfCheckboxQuestions" required>
            <option value="0">0</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
        </select>
    </div>

    <hr />

    <div class="form-group mb-4">
        <label for="Tags">Tags</label>
        <input id="Tags" asp-for="Tags" class="form-control" placeholder="Add tags..." />
    </div>
    <hr />
    <label>Public Template</label>
    <input type="checkbox" id="IsPublic" name="IsPublic" value="true" onclick="toggleAllowedUsers()" />
    <div id="allowed-users-group" class="form-group mb-4" style="display: none;">
        <label for="AllowedUsers">Allowed Users</label>
        <input id="AllowedUsers" asp-for="AllowedUsers" class="form-control" placeholder="Add users by name or email" required />
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var input = document.querySelector('#Tags');

            var listTagsTable = @Html.Raw(JsonConvert.SerializeObject(Model.TagsL));

            new Tagify(input, {
                delimiters: " ",
                whitelist: listTagsTable,
                maxTags: 10,
                dropdown: {
                    enabled: 1,
                    maxItems: 10,
                }
            });
        });
    </script>
    <script>
            document.addEventListener('DOMContentLoaded', function () {
            const input = document.getElementById('_Name');

            // Inicializa Tagify
            const tagify = new Tagify(input, {
                enforceWhitelist: true, // Solo permite agregar usuarios de la lista
                whitelist: [], // La lista se llenará dinámicamente
                dropdown: {
                    enabled: 1, // Muestra la lista al escribir
                    maxItems: 10, // Máximo de resultados a mostrar
                    position: "text", // Posición relativa al texto
                },
            });

            // Detecta cambios en el campo de entrada
            tagify.on('input', async function (e) {
                const query = e.detail.value.trim();

                if (!query) {
                    tagify.whitelist = [];
                    tagify.dropdown.hide();
                    return;
                }

                // Llama al controlador para obtener los usuarios
                const response = await fetch(`FormsController/SearchUsers?query=${query}`);
                const data = await response.json();

                // Actualiza la lista blanca de Tagify
                tagify.whitelist = data.map(user => ({
                    value: user.Name,
                    email: user.Email,
                }));

                // Muestra el dropdown con los resultados
                tagify.dropdown.show();
            });

            // Opcional: Mostrar email en el campo cuando se selecciona un usuario
            tagify.on('add', function (e) {
                const selected = e.detail.data;
                console.log(`Usuario seleccionado: ${selected.value} (${selected.email})`);
            });
        });
    </script>
    <script>
        function toggleAllowedUsers() {
            const isPublic = document.getElementById("IsPublic").checked;
            const allowedUsersGroup = document.getElementById("allowed-users-group");

            if (isPublic) {
                allowedUsersGroup.style.display = "none"; // Oculta el campo
            } else {
                allowedUsersGroup.style.display = "block"; // Muestra el campo
            }
        }

        // Inicializar visibilidad al cargar la página
        document.addEventListener("DOMContentLoaded", toggleAllowedUsers);
    </script>
    <button class="row-cols-5" type="submit">Next</button>
</form>
